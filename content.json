{"meta":{"title":"rolitter's Blog","subtitle":"a little bear","description":"rolitter site","author":"rolitter","url":"https://rolitter.github.io"},"pages":[{"title":"categories","date":"2017-07-07T10:43:53.000Z","updated":"2017-07-07T10:46:54.216Z","comments":false,"path":"categories/index.html","permalink":"https://rolitter.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2017-07-06T09:49:46.000Z","updated":"2017-07-07T09:39:22.389Z","comments":true,"path":"tags/index.html","permalink":"https://rolitter.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"ele","slug":"element","date":"2017-07-24T11:01:15.866Z","updated":"2017-07-24T11:05:38.111Z","comments":true,"path":"2017/07/24/element/","link":"","permalink":"https://rolitter.github.io/2017/07/24/element/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"Hexo�̳�","slug":"Hexo�̳�","permalink":"https://rolitter.github.io/categories/Hexo�̳�/"}],"tags":[{"name":"����","slug":"����","permalink":"https://rolitter.github.io/tags/����/"},{"name":"�Ƽ�","slug":"�Ƽ�","permalink":"https://rolitter.github.io/tags/�Ƽ�/"},{"name":"vue","slug":"vue","permalink":"https://rolitter.github.io/tags/vue/"},{"name":"ele","slug":"ele","permalink":"https://rolitter.github.io/tags/ele/"}]},{"title":"vue使用方法","slug":"vue","date":"2017-07-07T03:00:05.386Z","updated":"2017-07-07T08:26:02.337Z","comments":true,"path":"2017/07/07/vue/","link":"","permalink":"https://rolitter.github.io/2017/07/07/vue/","excerpt":"","text":"vue-element-admin线上地址 English Document wiki 注意：该项目目前使用element-ui@1.3.3版本,所以最低兼容 Vue 2.3.0 前言 这半年来一直在用vue写管理后台，目前后台已经有百来个个页面，十几种权限，但维护成本依然很低，所以准备开源分享一下后台开发的经验和成果。目前的技术栈主要的采用vue+element+axios由webpack2打包.由于是个人项目，所以数据请求都是用了mockjs模拟。注意：在次项目基础上改造开发时请移除mock文件。 写了一个系列的教程配套文章，如何从零构建后一个完整的后台项目: wiki 手摸手，带你用 vue 撸后台 系列一(基础篇) 手摸手，带你用 vue 撸后台 系列二(登录权限篇) 手摸手，带你用 vue 撸后台 系列三 (实战篇) 手摸手，带你封装一个vue component 相应需求，开了一个qq群 591724180 方便大家交流 如有问题请先看上述文章和Wiki,若不能满足，欢迎issue和pr~ 该项目并不是一个脚手架，更倾向于是一个集成解决方案方案 该项目不支持低版本游览器，有需求请自行添加polyfill详情 功能 登录/注销 权限验证 侧边栏 面包屑 富文本编辑器 Markdown编辑器 JSON编辑器 列表拖拽 plitPane Dropzone Sticky CountTo echarts图表 401，401错误页面 错误日志 导出excel table example 动态table example 拖拽table example 内联编辑table example form example 多环境发布 dashboard 二次登录 动态侧边栏（支持多级路由） mock数据 cache tabs example screenfull markdown2html 开发12345678910# 克隆项目git clone https://github.com/PanJiaChen/vue-element-admin.git# 安装依赖npm install //or # 建议不要用cnpm 安装有各种诡异的bug 可以通过如下操作解决npm速度慢的问题npm install --registry=https://registry.npm.taobao.org# 本地开发 开启服务npm run dev 浏览器访问 http://localhost:9527 发布12345# 发布测试环境 带webpack ananalyzernpm run build:sit-preview# 构建生成环境npm run build:prod 目录结构12345678910111213141516171819202122232425├── build // 构建相关 ├── config // 配置相关├── src // 源代码│ ├── api // 所有请求│ ├── assets // 主题 字体等静态资源│ ├── components // 全局公用组件│ ├── directive // 全局指令│ ├── filtres // 全局filter│ ├── mock // mock数据│ ├── router // 路由│ ├── store // 全局store管理│ ├── styles // 全局样式│ ├── utils // 全局公用方法│ ├── view // view│ ├── App.vue // 入口页面│ └── main.js // 入口 加载组件 初始化等├── static // 第三方不打包资源│ ├── jquery│ └── Tinymce // 富文本├── .babelrc // babel-loader 配置├── eslintrc.js // eslint 配置项├── .gitignore // git 忽略项├── favicon.ico // favicon图标├── index.html // html模板└── package.json // package.json ChangelogDetailed changes for each release are documented in the release notes. 状态管理后台只有user和app配置相关状态使用vuex存在全局，其它数据都由每个业务页面自己管理。 效果图两步验证登录 支持微信和qq 两步验证 here 真正的动态换肤 真正的动态换肤 #### 可收起侧边栏 enter image description here table拖拽排序 enter image description here 动态table enter image description here 上传裁剪头像 enter image description here 错误统计 enter image description here 富文本(整合七牛 打水印等个性化功能) enter image description here 封装table组件 enter image description here 图表 enter image description here 导出excel enter image description here 更多demo","categories":[],"tags":[{"name":"技术","slug":"技术","permalink":"https://rolitter.github.io/tags/技术/"},{"name":"科技","slug":"科技","permalink":"https://rolitter.github.io/tags/科技/"},{"name":"随笔","slug":"随笔","permalink":"https://rolitter.github.io/tags/随笔/"},{"name":"vue","slug":"vue","permalink":"https://rolitter.github.io/tags/vue/"}]},{"title":"vue英文版","slug":"README-en","date":"2017-07-07T03:00:03.015Z","updated":"2017-07-07T08:27:03.098Z","comments":true,"path":"2017/07/07/README-en/","link":"","permalink":"https://rolitter.github.io/2017/07/07/README-en/","excerpt":"","text":"Intro In the past half year, I have been building a backend for management dashboard using Vue. Though the backend has contained greater than 70 pages and over 10 permissions, it still takes insignificant effort to maintain the project. So I decide to make it open source so as to share my development experience and progress on backend. The tech stack is mainly Vue.js+Element+axios. Since it’s a personal project, all data requests are simulated with Mock.js. Note: if anyone wants to modify or develop based on this project, please remove the mock files. Live demo: http://panjiachen.github.io/vue-element-admin Note: element-ui@1.3.3 is used in the project, so vue 2.3.0+ is required. More tutorials incoming. Including articles on: How to build structure of a backend dashboard project from scratch How to make a complete user system (e.g. permission authentication, two-factor authentication) How to package components (e.g. rich text) How to integrate with Qiniu Other development experience on backend Join the group on QQ 591724180. Tutorials: Wiki Step by step instructions on playing with backend using Vue Part 1 - Fundamentals Step by step instructions on playing with backend using Vue Part 2 - Login permission Step by step instructions on packaging a Vue component Please read the Wiki and articles above before creating any issue. Feel free to contribute by making a pull request. Features Login/Logout Permission authentication Sidebar Breadcrumb Rich text editor Markdown editor JSON editor Drag &amp; drop list SplitPane Dropzone Sticky CountTo ECharts 401, 404 error page Error log Exporting to Excel Table example Interactive table example Drag &amp; drop table example Form example Multi-environments distribution Dashboard Two-factor authentication Collapsing sidebar (support nested routes) Mock data cache tabs example screenfull markdown2html Development1234567891011# Clone projectgit clone https://github.com/PanJiaChen/vue-element-admin.git# Install dependenciesnpm install# Or (not recommended for cnpm due to unknown bugs, use taobao mirror instead)npm install --registry=https://registry.npm.taobao.org# Run local dev servernpm run dev Visit in browser: http://localhost:9527 Distribution12345# Build staged environment with webpack-bundle-analyzernpm run build:sit-preview# Build production environmentnpm run build:prod Directory structure12345678910111213141516171819202122232425├── build // build ├── config // config├── src // source code│ ├── api // all requests│ ├── assets // static resource like themes, fonts│ ├── components // global public components│ ├── directive // global directive│ ├── filters // global filters│ ├── mock // mock data│ ├── router // router│ ├── store // global status management│ ├── styles // global styles│ ├── utils // global public functions│ ├── view // view│ ├── App.vue // entry view│ └── main.js // entry for loading components, initialization├── static // third-party libraries not packed with Webpack│ ├── jquery│ └── Tinymce // rich text├── .babelrc // babel-loader config├── eslintrc.js // eslint config├── .gitignore // gitignore├── favicon.ico // favicon├── index.html // html template└── package.json // package.json ChangelogDetailed changes for each release are documented in the release notes. State ManagementOnly status of user and app configuration is managed by Vuex. Other data are managed by their own business pages. DemoTwo-factor authentication, supporting WeChat and QQ Realtime switching themes Collapsing sidebar Drag &amp; drop table Interactive table Uploading cropped avatar Error log Rich text (integrated with Qiniu, watermark and customization) Packaging table component Charts Exporting to Excel Morehttp://panjiachen.github.io/vue-element-admin","categories":[],"tags":[{"name":"技术","slug":"技术","permalink":"https://rolitter.github.io/tags/技术/"},{"name":"科技","slug":"科技","permalink":"https://rolitter.github.io/tags/科技/"},{"name":"随笔","slug":"随笔","permalink":"https://rolitter.github.io/tags/随笔/"},{"name":"vue-en","slug":"vue-en","permalink":"https://rolitter.github.io/tags/vue-en/"}]},{"title":"欢迎来到我的博客","slug":"readme","date":"2017-07-06T09:24:53.587Z","updated":"2017-07-07T08:27:48.145Z","comments":true,"path":"2017/07/06/readme/","link":"","permalink":"https://rolitter.github.io/2017/07/06/readme/","excerpt":"","text":"Markdown1234567891011npm install xxx 安装模块npm install xxx -g 将模块安装到全局环境中 参考http://goddyzhao.tumblr.com/post/9835631010/no-direct-command-for-local-installed-command-line-modulnpm ls 查看安装的模块及依赖npm ls -g 查看全局安装的模块及依赖npm uninstall xxx (-g) 卸载模块npm cache clean 清理缓存 For more details see GitHub Flavored Markdown. Jekyll ThemesYour Pages site will use the layout and styles from the Jekyll theme you have selected in your repository settings. The name of this theme is saved in the Jekyll _config.yml configuration file. Support or ContactHaving trouble with Pages? Check out our documentation or contact support and we’ll help you sort it out.","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://rolitter.github.io/tags/随笔/"},{"name":"小熊","slug":"小熊","permalink":"https://rolitter.github.io/tags/小熊/"}]},{"title":"hexo命令","slug":"hexo","date":"2017-07-06T08:18:18.911Z","updated":"2017-07-07T10:35:53.609Z","comments":true,"path":"2017/07/06/hexo/","link":"","permalink":"https://rolitter.github.io/2017/07/06/hexo/","excerpt":"","text":"hexo命令 简写新建文章1$ hexo n \"My New Post\"==hexo new \"My New Post\" 详细信息: Writing 启动服务预览1$ hexo s == hexo server 详细信息: Server 生成1$ hexo g == hexo generate 详细信息: Generating 部署1$ hexo d == hexo deploy 详细信息: Deployment 服务器1234567$ hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。$ hexo server -s #静态模式$ hexo server -p 5000 #更改端口$ hexo server -i 192.168.1.1 #自定义 IP$ hexo clean #清除缓存 网页正常情况下可以忽略此条命令$ hexo g #生成静态网页$ hexo d #开始部署 监视文件变动12$ hexo generate #使用 Hexo 生成静态文件快速而且简单$ hexo generate --watch #监视文件变动 完成后部署123两个命令的作用是相同的$ hexo generate --deploy$ hexo deploy --generate 简写12$ hexo deploy -g$ hexo server -g 草稿1$ hexo publish [layout] &lt;title&gt; 模版123456789$ hexo new &quot;postName&quot; #新建文章$ hexo new page &quot;pageName&quot; #新建页面$ hexo generate #生成静态页面至public目录$ hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）$ hexo deploy #将.deploy目录部署到GitHub$ hexo new [layout] &lt;title&gt;$ hexo new photo &quot;My Gallery&quot;$ hexo new &quot;Hello World&quot; --lang tw 设置文章摘要1$ 以上是文章摘要 &lt;!--more--&gt; 以下是余下全文","categories":[{"name":"Hexo教程","slug":"Hexo教程","permalink":"https://rolitter.github.io/categories/Hexo教程/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://rolitter.github.io/tags/技术/"},{"name":"科技","slug":"科技","permalink":"https://rolitter.github.io/tags/科技/"},{"name":"随笔","slug":"随笔","permalink":"https://rolitter.github.io/tags/随笔/"},{"name":"hexo","slug":"hexo","permalink":"https://rolitter.github.io/tags/hexo/"}]}]}